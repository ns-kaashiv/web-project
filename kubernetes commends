Security group All TCP 0.0.0.0
https://github.com/ContainerSolutions/kubernetes-examples
https://github.com/aws/amazon-vpc-cni-k8s/blob/master/misc/eni-max-pods.txt
https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html#linux_amd64_kubectl

uname -m
x86_64: amd64
aarch64: arm64

aws eks update-kubeconfig --region REGION_NAME --name CLUSTER_NAME

kubectl get node
kubectl get ns
kubectl get pod
kubectl get svc
kubectl run kaashiv-pod --image=IMAGE_URL --port=80
kubectl get pods -o wide
curl http://172.31.32.214
kubectl exec -it kaashiv-pod -- /bin/bash
apt-get update
apt install vim
exit
kubectl expose pod kaashiv-pod --type=NodePort --port=80 --name=kaashiv-svc
kubectl delete pod kaashiv-pod
kubectl delete svc kaashiv-svc

deployment.yaml
-----------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaashiv-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kaashiv
  template:
    metadata:
      labels:
        app: kaashiv
    spec:
      containers:
      - name: kaashiv-container
        image: IMAGE_URL
        ports:
        - containerPort: 80

service.yaml
--------------------

apiVersion: v1
kind: Service
metadata:
  name: kaashiv-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: kaashiv
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80


kubectl apply -f deployment.yaml
kubectl apply -f service.yaml

kubectl get deploy

kubectl logs POD-NAME

kubectl delete -f deployment.yaml
kubectl delete -f service.yaml


//Create an IAM policy for managing Kubernetes LoadBalancers.
wget https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json


//eks installation
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin

eksctl version
eksctl utils associate-iam-oidc-provider --region=REGION_NAME --cluster=CLUSTER_NAME --approve

kubectl create serviceaccount load-balancer
kubectl get serviceaccount

eksctl create iamserviceaccount \
  --cluster=CLUSTER_NAME \
  --namespace=default \
  --name=load-balancer \
  --attach-policy-arn=ENTER_YOUR_AWSLoadBalancerControllerIAMPolicy_ARN \
  --approve \
  --override-existing-serviceaccounts

//helm installation
curl -LO https://get.helm.sh/helm-v3.11.3-linux-amd64.tar.gz
tar -zxvf helm-v3.11.3-linux-amd64.tar.gz
sudo mv linux-amd64/helm /usr/local/bin/helm
helm version

helm repo add eks https://aws.github.io/eks-charts
helm repo update

helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=CLUSTER_NAME \
  --set serviceAccount.create=false \
  --set serviceAccount.name=load-balancer \
  --set region=REGION_NAME \
  --set vpcId=VPC_ID

kubectl edit deploy aws-load-balancer-controller

helm delete aws-load-balancer-controller

//VPC subnet tag for use with Elastic LoadBalancers in Kubernetes on AWS.
key				value
----------------------		----------------------
kubernetes.io/role/elb 		1

ingress.yaml
---------------------

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kaashiv-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kaashiv-service
                port:
                  number: 80

kubectl get ingress
kubectl describe ingress kaashiv-ingress

kubectl delete -f deployment.yaml
kubectl delete -f service.yaml
kubectl delete -f ingress.yaml
kubectl apply -f deployment.yaml
kubectl apply -f service.yaml
kubectl apply -f ingress.yaml

kubectl get deploy

//dashboard installation
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml

kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard (Change NodePort)

dashboard-adminuser.yaml
------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

kubectl apply -f dashboard-adminuser.yaml

kubectl create token admin-user -n kubernetes-dashboard

Send request via HTTPS protocol in admin dashboard

kubectl describe secret -n kubernetes-dashboard admin-user

helm uninstall kubernetes-dashboard --namespace kubernetes-dashboard
